import React, { useState } from "react";
import { Card, Button, Form, Row, Col, Badge } from "react-bootstrap";

const meetingTypes = [
    {
        id: "consultation",
        title: "Business Consultation",
        duration: "30 min",
        description: "Initial consultation to discuss your business needs and goals.",
    },
    {
        id: "strategy",
        title: "Strategy Session",
        duration: "60 min",
        description: "Deep dive into strategic planning and implementation roadmap.",
    },
    {
        id: "demo",
        title: "Product Demo",
        duration: "45 min",
        description: "Comprehensive demonstration of our solutions and capabilities.",
    },
];

const timeSlots = [
    { id: "1", time: "10:00", available: true },
    { id: "2", time: "11:00", available: true },
    { id: "3", time: "12:00", available: true },
    { id: "4", time: "13:00", available: true },
    { id: "5", time: "14:00", available: true },
    { id: "6", time: "15:00", available: true },
    { id: "7", time: "16:00", available: true },
    { id: "8", time: "17:00", available: true },
    { id: "9", time: "18:00", available: true },
];

export default function ScheduleMeeting() {
    const [step, setStep] = useState(1);
    const [selectedMeetingType, setSelectedMeetingType] = useState("");
    const [currentMonth, setCurrentMonth] = useState("July");
    const [currentYear, setCurrentYear] = useState("2020");
    const [selectedDay, setSelectedDay] = useState(null);
    const [selectedTime, setSelectedTime] = useState("");
    const [formData, setFormData] = useState({
        name: "",
        email: "",
        phone: "",
        company: "",
        message: "",
    });

    const generateCalendarDays = () => {
        const daysInMonth = 31;
        const firstDayOfWeek = 3; // July 1, 2020 was Wednesday
        const days = [];

        for (let i = 0; i < firstDayOfWeek; i++) {
            days.push(null);
        }
        for (let day = 1; day <= daysInMonth; day++) {
            days.push(day);
        }
        return days;
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        setStep(4);
    };

    const resetForm = () => {
        setStep(1);
        setSelectedMeetingType("");
        setSelectedDay(null);
        setSelectedTime("");
        setFormData({ name: "", email: "", phone: "", company: "", message: "" });
    };

    return (
        <div className="container py-5">
            {/* Header */}
            <div className="text-center mb-5">
                <h1 className="fw-bold">Schedule a Meeting</h1>
                <p className="lead">
                    Book a consultation with our team to discuss how we can help grow your
                    business
                </p>
            </div>

            {/* Step Progress */}
            <div className="d-flex justify-content-center mb-4">
                {[1, 2, 3].map((num) => (
                    <div key={num} className="d-flex align-items-center">
                        <div
                            className={`rounded-circle d-flex justify-content-center align-items-center me-2`}
                            style={{
                                width: "40px",
                                height: "40px",
                                background: step >= num ? "#0d6efd" : "#dee2e6",
                                color: step >= num ? "#fff" : "#6c757d",
                                fontWeight: "500",
                            }}
                        >
                            {num}
                        </div>
                        {num < 3 && <div style={{ width: "40px", height: "2px", background: step > num ? "#0d6efd" : "#dee2e6" }} />}
                    </div>
                ))}
            </div>

            <div className="mx-auto" style={{ maxWidth: "900px" }}>
                {/* Step 1: Meeting Type */}
                {step === 1 && (
                    <Card className="shadow-sm p-4">
                        <h4 className="text-center mb-4">Choose Meeting Type</h4>
                        <Row>
                            {meetingTypes.map((type) => (
                                <Col md={4} key={type.id}>
                                    <Card
                                        className={`mb-3 text-center shadow-sm ${selectedMeetingType === type.id ? "border-primary" : ""
                                            }`}
                                        onClick={() => setSelectedMeetingType(type.id)}
                                        style={{ cursor: "pointer" }}
                                    >
                                        <Card.Body>
                                            <h5 className="fw-semibold">{type.title}</h5>
                                            <Badge bg="secondary" className="mb-2">
                                                {type.duration}
                                            </Badge>
                                            <p className="text-muted small">{type.description}</p>
                                        </Card.Body>
                                    </Card>
                                </Col>
                            ))}
                        </Row>
                        <div className="text-center mt-4">
                            <Button
                                disabled={!selectedMeetingType}
                                onClick={() => setStep(2)}
                            >
                                Continue
                            </Button>
                        </div>
                    </Card>
                )}

                {/* Step 2: Date + Time */}
                {step === 2 && (
                    <Card className="shadow-sm p-4 border-0 bg-light bg-opacity-75">
                        <h4 className="text-center mb-4 d-flex align-items-center justify-content-center gap-2">
                            <i className="bi bi-calendar text-primary me-2"></i>
                            Select Date & Time
                        </h4>
                        <p className="text-center text-muted mb-4">
                            Choose your preferred date and time slot
                        </p>

                        <Row className="g-4">
                            {/* Date Selection */}
                            <Col md={6}>
                                <h6 className="fw-semibold mb-3">Select Date</h6>
                                <div className="d-grid gap-2">
                                    {["Today", "Tomorrow", "Dec 20", "Dec 21", "Dec 22", "Dec 23"].map(
                                        (date) => (
                                            <Button
                                                key={date}
                                                variant={selectedDay === date ? "primary" : "outline-secondary"}
                                                className="py-2"
                                                onClick={() => setSelectedDay(date)}
                                            >
                                                {date}
                                            </Button>
                                        )
                                    )}
                                </div>
                            </Col>

                            {/* Time Selection */}
                            <Col md={6}>
                                <h6 className="fw-semibold mb-3">Available Times</h6>
                                <div className="d-grid gap-2">
                                    {timeSlots.map((slot) => (
                                        <Button
                                            key={slot.id}
                                            variant={selectedTime === slot.time ? "primary" : "outline-secondary"}
                                            className="d-flex align-items-center justify-content-center py-2 position-relative"
                                            disabled={!slot.available}
                                            onClick={() => slot.available && setSelectedTime(slot.time)}
                                        >
                                            <i className="bi bi-clock me-2"></i>
                                            {slot.time}
                                            {!slot.available && (
                                                <span
                                                    className="position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center bg-secondary bg-opacity-25 rounded text-muted small"
                                                    style={{ cursor: "not-allowed" }}
                                                >
                                                    Booked
                                                </span>
                                            )}
                                        </Button>
                                    ))}
                                </div>
                            </Col>
                        </Row>

                        <div className="d-flex justify-content-between mt-4">
                            <Button variant="outline-secondary" onClick={() => setStep(1)}>
                                Back
                            </Button>
                            <Button
                                onClick={() => setStep(3)}
                                disabled={!selectedDay || !selectedTime}
                            >
                                Continue
                            </Button>
                        </div>
                    </Card>
                )}


                {/* Step 3: User Info */}
                {step === 3 && (
                    <Card className="shadow-sm p-4">
                        <h4 className="text-center mb-4">Your Information</h4>
                        <Form onSubmit={handleSubmit}>
                            <Row>
                                <Col md={6} className="mb-3">
                                    <Form.Label>Full Name *</Form.Label>
                                    <Form.Control
                                        type="text"
                                        value={formData.name}
                                        onChange={(e) =>
                                            setFormData({ ...formData, name: e.target.value })
                                        }
                                        required
                                    />
                                </Col>
                                <Col md={6} className="mb-3">
                                    <Form.Label>Email *</Form.Label>
                                    <Form.Control
                                        type="email"
                                        value={formData.email}
                                        onChange={(e) =>
                                            setFormData({ ...formData, email: e.target.value })
                                        }
                                        required
                                    />
                                </Col>
                                <Col md={6} className="mb-3">
                                    <Form.Label>Phone</Form.Label>
                                    <Form.Control
                                        type="tel"
                                        value={formData.phone}
                                        onChange={(e) =>
                                            setFormData({ ...formData, phone: e.target.value })
                                        }
                                    />
                                </Col>
                                <Col md={6} className="mb-3">
                                    <Form.Label>Company</Form.Label>
                                    <Form.Control
                                        type="text"
                                        value={formData.company}
                                        onChange={(e) =>
                                            setFormData({ ...formData, company: e.target.value })
                                        }
                                    />
                                </Col>
                            </Row>
                            <Form.Group className="mb-3">
                                <Form.Label>Message (Optional)</Form.Label>
                                <Form.Control
                                    as="textarea"
                                    rows={3}
                                    value={formData.message}
                                    onChange={(e) =>
                                        setFormData({ ...formData, message: e.target.value })
                                    }
                                />
                            </Form.Group>

                            {/* Summary */}
                            <Card className="p-3 mb-3 bg-light">
                                <h6>Meeting Summary</h6>
                                <p className="small mb-1">
                                    <strong>Type:</strong>{" "}
                                    {meetingTypes.find((t) => t.id === selectedMeetingType)?.title}
                                </p>
                                <p className="small mb-1">
                                    <strong>Date:</strong> {currentMonth} {selectedDay},{" "}
                                    {currentYear}
                                </p>
                                <p className="small mb-1">
                                    <strong>Time:</strong> {selectedTime}
                                </p>
                                <p className="small">
                                    <strong>Duration:</strong>{" "}
                                    {
                                        meetingTypes.find((t) => t.id === selectedMeetingType)
                                            ?.duration
                                    }
                                </p>
                            </Card>

                            <div className="d-flex justify-content-between">
                                <Button variant="outline-secondary" onClick={() => setStep(2)}>
                                    Back
                                </Button>
                                <Button type="submit">Book Meeting</Button>
                            </div>
                        </Form>
                    </Card>
                )}

                {/* Step 4: Confirmation */}
                {step === 4 && (
                    <Card className="shadow-sm p-5 text-center">
                        <h3 className="mb-3 text-success">✅ Meeting Booked!</h3>
                        <p>Your meeting has been successfully scheduled.</p>
                        <Card className="p-3 mb-4 bg-light">
                            <h6>Meeting Details</h6>
                            <p>
                                <strong>Meeting:</strong>{" "}
                                {meetingTypes.find((t) => t.id === selectedMeetingType)?.title}
                            </p>
                            <p>
                                <strong>Date:</strong> {currentMonth} {selectedDay},{" "}
                                {currentYear}
                            </p>
                            <p>
                                <strong>Time:</strong> {selectedTime}
                            </p>
                            <p>
                                <strong>Attendee:</strong> {formData.name}
                            </p>
                            <p>
                                <strong>Email:</strong> {formData.email}
                            </p>
                        </Card>
                        <Button variant="outline-secondary" onClick={resetForm} className="me-2">
                            Schedule Another Meeting
                        </Button>
                        <Button>Add to Calendar</Button>
                    </Card>
                )}
            </div>
        </div>
    );
}
import React from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import "./App.css";

function App() {
  const tickets = [
    {
      id: "#TC-192",
      subject: "Help, I order wrong product...",
      priority: "High",
      type: "Incident",
      client: "Sante Carlazo",
      date: "07/11/2023, 06:25AM",
    },
    {
      id: "#TC-191",
      subject: "My Suggestion for this product",
      priority: "Low",
      type: "Suggestion",
      client: "Fast Response",
      date: "06/11/2023, 11:47PM",
    },
    {
      id: "#TC-190",
      subject: "Can I use the TV in bathroom?",
      priority: "Medium",
      type: "Question",
      client: "Arlene McCoy",
      date: "06/11/2023, 05:13AM",
    },
  ];

  return (
    <div className="d-flex dashboard">
      {/* Sidebar */}
      <div className="sidebar p-3">
        <h5 className="mb-4">Fikri Studio</h5>
        <ul className="list-unstyled">
          <li className="active">Dashboard</li>
          <li>Inbox</li>
          <li>Notification</li>
          <li>Ticket</li>
          <li>Knowledge Base</li>
          <li>Customer</li>
          <li>Forum</li>
          <li>Report</li>
        </ul>
      </div>

      {/* Main Content */}
      <div className="main-content p-3 flex-grow-1">
        <div className="d-flex justify-content-between align-items-center mb-3">
          <h4>Ticket</h4>
          <button className="btn btn-success">+ Add Ticket</button>
        </div>

        {/* Search & Filters */}
        <div className="d-flex mb-3 flex-wrap">
          <input
            type="text"
            className="form-control me-2 mb-2"
            placeholder="Search"
            style={{ maxWidth: "250px" }}
          />
          <select className="form-select me-2 mb-2" style={{ maxWidth: "150px" }}>
            <option>Type</option>
            <option>Incident</option>
            <option>Question</option>
            <option>Suggestion</option>
          </select>
          <select className="form-select me-2 mb-2" style={{ maxWidth: "150px" }}>
            <option>Priority</option>
            <option>Low</option>
            <option>Medium</option>
            <option>High</option>
          </select>
        </div>

        {/* Tickets Table */}
        <div className="table-responsive">
          <table className="table table-hover align-middle">
            <thead className="table-light">
              <tr>
                <th>Ticket ID</th>
                <th>Subject</th>
                <th>Priority</th>
                <th>Type</th>
                <th>Client</th>
                <th>Request Date</th>
              </tr>
            </thead>
            <tbody>
              {tickets.map((t, idx) => (
                <tr key={idx}>
                  <td>{t.id}</td>
                  <td>{t.subject}</td>
                  <td>
                    <span
                      className={`badge ${
                        t.priority === "High"
                          ? "bg-danger"
                          : t.priority === "Medium"
                          ? "bg-warning text-dark"
                          : "bg-success"
                      }`}
                    >
                      {t.priority}
                    </span>
                  </td>
                  <td>{t.type}</td>
                  <td>{t.client}</td>
                  <td>{t.date}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}

export default App;
