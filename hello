"use client"

import type React from "react"

import { useEffect } from "react"

interface Member {
  id: number
  name: string
  title: string
  image: string
  description: string
  linkedin: string
}

interface ProfileModalProps {
  member: Member
  onClose: () => void
}

export default function ProfileModal({ member, onClose }: ProfileModalProps) {
  // Handle escape key press
  useEffect(() => {
    const handleEscape = (e: KeyboardEvent) => {
      if (e.key === "Escape") {
        onClose()
      }
    }

    document.addEventListener("keydown", handleEscape)
    document.body.style.overflow = "hidden" // Prevent background scrolling

    return () => {
      document.removeEventListener("keydown", handleEscape)
      document.body.style.overflow = "unset"
    }
  }, [onClose])

  // Handle backdrop click
  const handleBackdropClick = (e: React.MouseEvent) => {
    if (e.target === e.currentTarget) {
      onClose()
    }
  }

  return (
    <div
      className="fixed inset-0 z-50 flex items-center justify-center p-4"
      style={{ backgroundColor: "rgba(0, 0, 0, 0.7)" }}
      onClick={handleBackdropClick}
    >
      <div className="relative max-w-4xl w-full mx-auto" style={{ maxHeight: "90vh" }}>
        {/* Modal Content */}
        <div
          className="flex flex-col md:flex-row overflow-hidden"
          style={{
            backgroundColor: "#e5e5e5",
            borderRadius: "20px",
            boxShadow: "0 10px 30px rgba(0, 0, 0, 0.3)",
          }}
        >
          {/* Close Button */}
          <button
            onClick={onClose}
            className="absolute top-4 right-4 z-10 flex items-center justify-center w-10 h-10 rounded-full text-white hover:opacity-80 transition-opacity"
            style={{ backgroundColor: "#5cb3cc" }}
          >
            <svg
              width="20"
              height="20"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
            >
              <line x1="18" y1="6" x2="6" y2="18"></line>
              <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
          </button>

          {/* Left Side - Image */}
          <div className="md:w-1/2 flex-shrink-0">
            <img
              src={member.image || "/placeholder.svg"}
              alt={member.name}
              className="w-full h-64 md:h-full object-cover"
              style={{ minHeight: "400px" }}
            />
          </div>

          {/* Right Side - Content */}
          <div className="md:w-1/2 p-8 flex flex-col justify-start">
            <div className="mb-6">
              <h2 className="text-3xl font-bold mb-2" style={{ color: "#333333" }}>
                {member.name}
              </h2>
              <p className="text-xl mb-4" style={{ color: "#666666" }}>
                {member.title}
              </p>

              {/* LinkedIn Icon */}
              <a
                href={member.linkedin}
                target="_blank"
                rel="noopener noreferrer"
                className="inline-block mb-6 hover:opacity-80 transition-opacity"
              >
                <svg width="32" height="32" viewBox="0 0 24 24" fill="#0077b5">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z" />
                </svg>
              </a>
            </div>

            {/* Description */}
            <div className="flex-1">
              <p
                className="text-base leading-relaxed"
                style={{
                  color: "#555555",
                  lineHeight: "1.6",
                }}
              >
                {member.description}
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}





"use client"

import { useState } from "react"
import ProfileModal from "../components/profile-modal"

// Sample team data
const teamMembers = [
  {
    id: 1,
    name: "Shanti Mudigonda",
    title: "Executive Vice President",
    image:
      "https://hebbkx1anhila5yf.public.blob.vercel-storage.com/IMG_20250910_165036071_MP.jpg-eIUfdqX9DSyTlvChKImHSuSWG4YwRg.jpeg",
    description:
      "A seasoned Operations Executive is responsible overseeing the entire process. Supporting organizations vision while maintaining an intimate knowledge of every department of the organization. Responsible for ensuring operational deadlines are met while maintaining quality control standards. As an executive, working closely with CEO and board, communicating top level ideas while demonstrating results.",
    linkedin: "https://linkedin.com/in/shanti-mudigonda",
  },
  {
    id: 2,
    name: "John Smith",
    title: "Chief Technology Officer",
    image: "/professional-male-headshot.png",
    description:
      "Experienced technology leader with over 15 years in software development and team management. Specializes in scalable architecture and digital transformation initiatives.",
    linkedin: "https://linkedin.com/in/john-smith",
  },
  {
    id: 3,
    name: "Sarah Johnson",
    title: "Head of Marketing",
    image: "/professional-headshot-female.png",
    description:
      "Creative marketing strategist with expertise in brand development and digital campaigns. Proven track record of driving growth through innovative marketing solutions.",
    linkedin: "https://linkedin.com/in/sarah-johnson",
  },
]

export default function HomePage() {
  const [selectedMember, setSelectedMember] = useState(null)
  const [showModal, setShowModal] = useState(false)

  const handleCardClick = (member) => {
    setSelectedMember(member)
    setShowModal(true)
  }

  const handleCloseModal = () => {
    setShowModal(false)
    setSelectedMember(null)
  }

  return (
    <div className="min-h-screen bg-gray-100 py-8">
      <div className="container mx-auto px-4">
        <h1 className="text-4xl font-bold text-center mb-8 text-gray-800">Our Team</h1>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {teamMembers.map((member) => (
            <div
              key={member.id}
              className="bg-white rounded-lg shadow-md overflow-hidden cursor-pointer transform transition-transform hover:scale-105"
              onClick={() => handleCardClick(member)}
            >
              <img src={member.image || "/placeholder.svg"} alt={member.name} className="w-full h-64 object-cover" />
              <div className="p-4">
                <h3 className="text-xl font-semibold text-gray-800 mb-2">{member.name}</h3>
                <p className="text-gray-600">{member.title}</p>
              </div>
            </div>
          ))}
        </div>
      </div>

      {showModal && selectedMember && <ProfileModal member={selectedMember} onClose={handleCloseModal} />}
    </div>
  )
}

